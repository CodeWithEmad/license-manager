# Generated by Django 2.2.17 on 2020-11-20 20:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('subscriptions', '0013_add_revoke_cap_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerAgreement',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('enterprise_customer_uuid', models.UUIDField(unique=True)),
                ('enterprise_customer_slug', models.CharField(max_length=128, unique=True)),
                ('default_enterprise_catalog_uuid', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Customer Agreement',
                'verbose_name_plural': 'Customer Agreements',
            },
        ),
        migrations.AlterField(
            model_name='historicalsubscriptionplan',
            name='enterprise_customer_uuid',
            field=models.UUIDField(blank=True, db_index=True, help_text='The Enterprise Customer UUID should match the one in the Customer agreement if one is selected.', null=True),
        ),
        migrations.AlterField(
            model_name='subscriptionplan',
            name='enterprise_customer_uuid',
            field=models.UUIDField(blank=True, db_index=True, help_text='The Enterprise Customer UUID should match the one in the Customer agreement if one is selected.', null=True),
        ),
        migrations.CreateModel(
            name='SubscriptionPlanRenewal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('salesforce_opportunity_id', models.CharField(help_text='Locate the appropriate Salesforce Opportunity record and copy the Opportunity ID field (18 characters). Note that this is not the same Salesforce Opportunity ID associated with the linked subscription.', max_length=18, validators=[django.core.validators.MinLengthValidator(18)])),
                ('number_of_licenses', models.PositiveIntegerField(help_text='Number of licenses to renew the linked subscription for.')),
                ('effective_date', models.DateField(help_text='The date that the subscription renewal will take place on.')),
                ('renewed_expiration_date', models.DateField(help_text='The date that the renewed subscription should expire on.')),
                ('processed', models.BooleanField(default=False, help_text='Whether the renewal has been processed and gone into effect for the linked subscription.')),
                ('prior_subscription_plan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='renewal', to='subscriptions.SubscriptionPlan')),
                ('renewed_subscription_plan', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='origin_renewal', to='subscriptions.SubscriptionPlan')),
            ],
            options={
                'verbose_name': 'Subscription Plan Renewal',
                'verbose_name_plural': 'Subscription Plan Renewals',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubscriptionPlanRenewal',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('salesforce_opportunity_id', models.CharField(help_text='Locate the appropriate Salesforce Opportunity record and copy the Opportunity ID field (18 characters). Note that this is not the same Salesforce Opportunity ID associated with the linked subscription.', max_length=18, validators=[django.core.validators.MinLengthValidator(18)])),
                ('number_of_licenses', models.PositiveIntegerField(help_text='Number of licenses to renew the linked subscription for.')),
                ('effective_date', models.DateField(help_text='The date that the subscription renewal will take place on.')),
                ('renewed_expiration_date', models.DateField(help_text='The date that the renewed subscription should expire on.')),
                ('processed', models.BooleanField(default=False, help_text='Whether the renewal has been processed and gone into effect for the linked subscription.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('prior_subscription_plan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='subscriptions.SubscriptionPlan')),
                ('renewed_subscription_plan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='subscriptions.SubscriptionPlan')),
            ],
            options={
                'verbose_name': 'historical Subscription Plan Renewal',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCustomerAgreement',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('enterprise_customer_uuid', models.UUIDField(db_index=True)),
                ('enterprise_customer_slug', models.CharField(db_index=True, max_length=128)),
                ('default_enterprise_catalog_uuid', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Customer Agreement',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='historicalsubscriptionplan',
            name='customer_agreement',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='subscriptions.CustomerAgreement'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='customer_agreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='subscriptions.CustomerAgreement'),
        ),
    ]
